[gd_scene load_steps=6 format=3 uid="uid://cjgpntf8byh31"]

[sub_resource type="GDScript" id="GDScript_nhvj8"]
script/source = "extends Node

const ArraySerializerGd      = preload(\"res://HierarchicalSerializer.gd\")


func _ready():
	call_deferred(\"savePackedScene\")
	call_deferred(\"saveDictBasedTree\")
	call_deferred(\"saveArrayBasedTree\")
	call_deferred(\"saveFlat\")


func savePackedScene():
	_populateWithDuplicates( $\"NodeName1\")

	var scene = PackedScene.new()
	var result = scene.pack( $\"NodeName1\" )
	if result == OK:
		# warning-ignore:return_value_discarded
		ResourceSaver.save(\"res://tests/files/generated/savedPacked.scn\", scene)
		pass


func saveArrayBasedTree():
	_populateWithDuplicates( $\"NodeName3\" )

	var serializer = ArraySerializerGd.new()
	var data = serializer.serialize( $\"NodeName3\" )
	var saveFile = File.new()

	if OK != saveFile.open(\"res://tests/files/generated/saveArrayBasedTree.json\", File.WRITE):
		return

	saveFile.store_line(to_json(data))
	saveFile.close()


func saveFlat():
	_populateWithDuplicates( $\"NodeName4\" )

	var saveFile = File.new()
	if OK != saveFile.open(\"res://tests/files/generated/saveFlat.json\", File.WRITE):
		return

	var data := {}
	data[ name ] = $\"NodeName4\".serialize()
	for child in $\"NodeName4\".get_children():
		data[child.get_path()] = child.serialize()

	saveFile.store_line(to_json(data))
	saveFile.close()


func _populateWithDuplicates( parent : Node ):
	var prototype = parent.duplicate()
	# warning-ignore:unused_variable
	for i in range( 0, 300 ):
		var node = prototype.duplicate()
		parent.add_child( node, true )
		node.owner = parent

	prototype.free()
"

[sub_resource type="GDScript" id="1"]
script/source = "extends Node

# warning-ignore:unused_class_variable
var f := 0.2
# warning-ignore:unused_class_variable
var s := \"foo\"
# warning-ignore:unused_class_variable
var i := 3

"

[sub_resource type="GDScript" id="2"]
script/source = "extends Node

# warning-ignore:unused_class_variable
var f := 0.2
# warning-ignore:unused_class_variable
var s := \"foo\"
# warning-ignore:unused_class_variable
var i := 3


func serialize():
	return { 'f' : f, 's' : s, 'i' : i }

"

[sub_resource type="GDScript" id="3"]
script/source = "extends Node

# warning-ignore:unused_class_variable
var f := 0.2
# warning-ignore:unused_class_variable
var s := \"foo\"
# warning-ignore:unused_class_variable
var i := 3


func serialize():
	return [f, s, i]

"

[sub_resource type="GDScript" id="4"]
script/source = "extends Node

# warning-ignore:unused_class_variable
var f := 0.2
# warning-ignore:unused_class_variable
var s := \"foo\"
# warning-ignore:unused_class_variable
var i := 3


func serialize():
	return { 'f' : f, 's' : s, 'i' : i, \"SCENE\" : filename }

"

[node name="FileSizeComparison" type="Node"]
script = SubResource("GDScript_nhvj8")

[node name="NodeName1" type="Node" parent="."]
script = SubResource("1")

[node name="NodeName2" type="Node" parent="."]
script = SubResource("2")

[node name="NodeName3" type="Node" parent="."]
script = SubResource("3")

[node name="NodeName4" type="Node" parent="."]
script = SubResource("4")
